1) make a new plugin inside of the plugins folder 

2) add this 

/**
 * Plugin Name: My Cool Border Box
 * Author: Musaa Muhsen
 * Version: 1.0.0
 */

function loadMyBlockFiles() {
  wp_enqueue_script(
    'my-super-unique-handle',
    plugin_dir_url(__FILE__) . 'my-block.js',
    array('wp-blocks', 'wp-i18n', 'wp-editor'),
    true
  );
}

add_action('enqueue_block_editor_assets', 'loadMyBlockFiles');

3) gutenberg is mostly powered by js no php so create a file relevant to enqueue_block_editor_assets 

4) wp object that wp add to the global scope, we can look inside the wp object for another object named blocks and it contains a method named register 

5) use babel to compile js to react 

6) edit will sort out the glutenberg functionality but we need to tell wordpress that input element is related to our content attribute 

7) console > wp.components > modules

8) react will enable us to leverage reusable components like wp.components.ColorPicker and basically pretend that they are native html elements

9)  babel to change for edit > 
<div> 
  <h3>Your Cool Border Box</h3>
  <input type="text" value={props.attributes.content} onChange={updateContent} />  
  <wp.components.ColorPicker color={props.attributes.color} onChangeComplete={updateColor} />
</div>

10) babel to change for save 